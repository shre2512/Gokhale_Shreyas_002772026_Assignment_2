/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import model.City;
import model.CityDirectory;
import model.Community;
import model.CommunityDirectory;
import model.House;
import model.HouseDirectory;

/**
 *
 * @author shrey
 */
public class createHouseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form createHouseJPanel
     */
    HouseDirectory houseDirectory;
    CityDirectory cityDirectory;
    CommunityDirectory communityDirectory;
    
    public createHouseJPanel(CityDirectory cityDirectory, CommunityDirectory communityDirectory, HouseDirectory houseDirectory) {
        initComponents();
        this.houseDirectory = houseDirectory;
        this.cityDirectory = cityDirectory;
        this.communityDirectory = communityDirectory;
        populateCityComboBox(cityDirectory);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCreateHouse = new javax.swing.JLabel();
        lblHouseAddress = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        lblSelectCommunity = new javax.swing.JLabel();
        lblSelectCity = new javax.swing.JLabel();
        txtHouseAddress = new javax.swing.JTextField();
        selectCityCombo = new javax.swing.JComboBox<>();
        selectCommunityCombo = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(0, 255, 255));

        lblCreateHouse.setBackground(new java.awt.Color(255, 255, 255));
        lblCreateHouse.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCreateHouse.setForeground(new java.awt.Color(255, 0, 0));
        lblCreateHouse.setText("                                                                                          Create House");

        lblHouseAddress.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblHouseAddress.setText("House Address :");

        submitButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        submitButton.setForeground(new java.awt.Color(255, 51, 51));
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        lblSelectCommunity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblSelectCommunity.setText("Select Community : ");

        lblSelectCity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblSelectCity.setText("Select City :");

        txtHouseAddress.setPreferredSize(new java.awt.Dimension(71, 30));

        selectCityCombo.setPreferredSize(new java.awt.Dimension(72, 30));
        selectCityCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCityComboActionPerformed(evt);
            }
        });

        selectCommunityCombo.setPreferredSize(new java.awt.Dimension(72, 30));
        selectCommunityCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCommunityComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCreateHouse, javax.swing.GroupLayout.DEFAULT_SIZE, 1050, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(306, 306, 306)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblSelectCommunity)
                                    .addComponent(lblHouseAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(342, 342, 342)
                                .addComponent(lblSelectCity, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectCityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHouseAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectCommunityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(433, 433, 433)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblCreateHouse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectCityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectCommunityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHouseAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHouseAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        
        String validate = validationCheck();
        if(!validate.isEmpty())
        {
            JOptionPane.showMessageDialog(this, validate);
        }
        else
        {
            House newHouse = houseDirectory.addNewHouse();
            String selectedCity = selectCityCombo.getSelectedItem().toString();
            String selectedCommunity = selectCommunityCombo.getSelectedItem().toString();

            newHouse.setCityName(selectedCity);
            newHouse.setCommunityName(selectedCommunity);
            newHouse.setStreetAddress(txtHouseAddress.getText());

            for(Community cm:communityDirectory.getCommunityDirectory())
            {
                if(cm.getCommunityName().equals(selectedCommunity))
                {
                    cm.getCommunityHouses().add(newHouse);
                }
            }

            JOptionPane.showMessageDialog(this, "House Added!");
            txtHouseAddress.setText("");
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void selectCityComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCityComboActionPerformed
        // TODO add your handling code here:
        String selectedCity = selectCityCombo.getSelectedItem().toString();
        populateCommunityComboBox(selectedCity);
    }//GEN-LAST:event_selectCityComboActionPerformed

    private void selectCommunityComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCommunityComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectCommunityComboActionPerformed
    
    private void populateCityComboBox(CityDirectory cityDirectory)
    {
        for(City c:cityDirectory.getCityDirectory())
        {
            selectCityCombo.addItem(c.getCityName());
        }
    }
    
    private void populateCommunityComboBox(String selectedCity)
    {
        selectCommunityCombo.removeAllItems();
        for(Community cm:communityDirectory.getCommunityDirectory())
        {
            if(cm.getCityName().equals(selectedCity))
            {
                selectCommunityCombo.addItem(cm.getCommunityName());
            }
        }
    }
    
    private String validationCheck()
    {
        if(txtHouseAddress.getText().isEmpty())
        {
            return "Please fill all fields!";
        }
        return "";
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblCreateHouse;
    private javax.swing.JLabel lblHouseAddress;
    private javax.swing.JLabel lblSelectCity;
    private javax.swing.JLabel lblSelectCommunity;
    private javax.swing.JComboBox<String> selectCityCombo;
    private javax.swing.JComboBox<String> selectCommunityCombo;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField txtHouseAddress;
    // End of variables declaration//GEN-END:variables
}
