/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.table.DefaultTableModel;
import model.City;
import model.CityDirectory;
import model.Community;
import model.CommunityDirectory;
import model.Doctor;
import model.DoctorDirectory;

/**
 *
 * @author shrey
 */
public class searchNearDoctors extends javax.swing.JPanel {

    /**
     * Creates new form searchNearDoctors
     */
    DoctorDirectory doctorDirectory;
    CityDirectory cityDirectory;
    CommunityDirectory communityDirectory;
    
    public searchNearDoctors(CityDirectory cityDirectory, CommunityDirectory communityDirectory, DoctorDirectory doctorDirectory) {
        initComponents();
        this.doctorDirectory = doctorDirectory;
        this.cityDirectory = cityDirectory;
        this.communityDirectory = communityDirectory;
        populateCityComboBox(cityDirectory);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSearchDoctors = new javax.swing.JLabel();
        labelHospitalCity = new javax.swing.JLabel();
        selectCityCombo = new javax.swing.JComboBox<>();
        labelCommunityName = new javax.swing.JLabel();
        selectCommunityCombo = new javax.swing.JComboBox<>();
        btnFilter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchDoctors = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 255, 255));

        lblSearchDoctors.setBackground(new java.awt.Color(255, 255, 255));
        lblSearchDoctors.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblSearchDoctors.setForeground(new java.awt.Color(255, 0, 0));
        lblSearchDoctors.setText("                                                                                               Search Doctors");

        labelHospitalCity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        labelHospitalCity.setText("Select City :");

        selectCityCombo.setPreferredSize(new java.awt.Dimension(72, 30));
        selectCityCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCityComboActionPerformed(evt);
            }
        });

        labelCommunityName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        labelCommunityName.setText("Select Community : ");

        selectCommunityCombo.setPreferredSize(new java.awt.Dimension(72, 30));
        selectCommunityCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCommunityComboActionPerformed(evt);
            }
        });

        btnFilter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnFilter.setForeground(new java.awt.Color(255, 0, 0));
        btnFilter.setText("Filter");
        btnFilter.setPreferredSize(new java.awt.Dimension(104, 30));
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        searchDoctors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Hospital", "Specialization", "Gender", "Email ID", "Phone"
            }
        ));
        jScrollPane1.setViewportView(searchDoctors);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lblSearchDoctors, javax.swing.GroupLayout.DEFAULT_SIZE, 1038, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(287, 287, 287)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelCommunityName)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(labelHospitalCity, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(81, 81, 81)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectCityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectCommunityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(462, 462, 462)
                                .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSearchDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHospitalCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectCityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCommunityName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectCommunityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(149, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void selectCityComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCityComboActionPerformed
        // TODO add your handling code here:
        String selectedCity = selectCityCombo.getSelectedItem().toString();
        populateCommunityComboBox(selectedCity);
    }//GEN-LAST:event_selectCityComboActionPerformed

    private void selectCommunityComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCommunityComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectCommunityComboActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        // TODO add your handling code here:
        String selectedCity = selectCityCombo.getSelectedItem().toString();
        String selectedCommunity = selectCommunityCombo.getSelectedItem().toString();
        populatePersonTable(selectedCity, selectedCommunity);
    }//GEN-LAST:event_btnFilterActionPerformed
    
    private void populatePersonTable(String selectedCity, String selectedCommunity)
    {
        DefaultTableModel model = (DefaultTableModel) searchDoctors.getModel();
        model.setRowCount(0);
        
        for(Doctor d:doctorDirectory.getDoctorDirectory())
        {
            if(d.getCommunityName().equals(selectedCommunity) && d.getCityName().equals(selectedCity))
            {
                Object[] row = new Object[6];
                row[0] = d;
                row[1] = d.getHospitalName();
                row[2] = d.getDoctorSpecialization();
                row[3] = d.getGender();
                row[4] = d.getEmailId();
                row[5] = d.getPhoneNumber();
                model.addRow(row);
            }
        }
        
    }
    
    private void populateCityComboBox(CityDirectory cityDirectory)
    {
        for(City c:cityDirectory.getCityDirectory())
        {
            selectCityCombo.addItem(c.getCityName());
        }
    }
    
    private void populateCommunityComboBox(String selectedCity)
    {
        selectCommunityCombo.removeAllItems();
        for(Community cm:communityDirectory.getCommunityDirectory())
        {
            if(cm.getCityName().equals(selectedCity))
            {
                selectCommunityCombo.addItem(cm.getCommunityName());
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFilter;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCommunityName;
    private javax.swing.JLabel labelHospitalCity;
    private javax.swing.JLabel lblSearchDoctors;
    private javax.swing.JTable searchDoctors;
    private javax.swing.JComboBox<String> selectCityCombo;
    private javax.swing.JComboBox<String> selectCommunityCombo;
    private javax.swing.JButton submitButton;
    private javax.swing.JButton submitButton1;
    private javax.swing.JButton submitButton2;
    // End of variables declaration//GEN-END:variables
}
